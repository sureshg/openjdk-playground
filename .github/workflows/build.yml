name: Build

env:
  GITHUB_PUBLISH: 'false'

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths-ignore:
      - LICENSE
      - README.md
      - 'docs/**'
      - '.github/config/labels.yml'

  pull_request:
    branches:
      - main

  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:

  # Gradle Build Action
  build:
    name: üèóÔ∏è Gradle Build
    # if: github.event_name  == 'pull_request'

    permissions:
      contents: write
      packages: write

    strategy:
      fail-fast: true
      max-parallel: 3
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        jdk: [ loom ]
        include:
          - os: ubuntu-latest
            cmd: ./gradlew
          - os: macos-latest
            cmd: ./gradlew
          - os: windows-latest
            cmd: ./gradlew.bat

    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    continue-on-error: false

    outputs:
      version: ${{ steps.gradle-build.outputs.version }}
      artifact_name: ${{ steps.gradle-build.outputs.uberjar_name }}
      artifact_path: ${{ steps.gradle-build.outputs.uberjar_path }}

    steps:
      - name: ‚èπÔ∏è Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: üõéÔ∏è Check out the source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ‚¨áÔ∏è Download EA build of ${{ matrix.jdk }} from jdk.java.net
        id: download-jdk
        uses: oracle-actions/setup-java@v1
        with:
          website: jdk.java.net
          release: loom
          install: false

      - name: ‚òï Set up OpenJDK ${{ matrix.jdk }}
        id: setup-java
        uses: actions/setup-java@v3
        if: always() && steps.download-jdk.outcome == 'success'
        with:
          distribution: jdkfile
          java-version: ${{ steps.download-jdk.outputs.version }}
          jdkFile: ${{ steps.download-jdk.outputs.archive }}
          cache: 'gradle'
          # settings-path: ${{ github.workspace }} # OR $GITHUB_WORKSPACE

      - name: üß∞ Export Gradle Properties
        if: ${{ false }}
        id: gradle-properties
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          NAME="$(echo "$PROPERTIES" | grep "^name:" | cut -f2- -d ' ')"
          ARTIFACT="${NAME}-${VERSION}.jar"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=name::$NAME"
          echo "::set-output name=artifact::$ARTIFACT"
          echo "Runner Tool Cache: ${RUNNER_TOOL_CACHE}"

      - name: üì¶ Publish to GitHub Packages (Linux)
        id: gradle-publish
        if: env.GITHUB_PUBLISH == 'true' && runner.os == 'Linux'
        run: |
          ./gradlew publish
        env:
          GITHUB_USER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üèóÔ∏è Gradle Run & Build
        id: gradle-build
        run: ./gradlew run build dokkaHtml

      - name: üì§ Uploading ${{ matrix.os }} uber jar
        if: steps.gradle-build.outcome == 'success' && runner.os == 'Linux'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.gradle-build.outputs.uberjar_name }}
          path: |
            ${{ steps.gradle-build.outputs.uberjar_path }}
          if-no-files-found: error

      # Deploy the Dokka site for new tag on Linux
      # Can also use "peaceiris/actions-gh-pages@v3.8.0
      - name: üöÄ Deploy html docs to website
        if: startsWith(github.ref, 'refs/tags/') && runner.os == 'Linux'
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: main
          folder: build/dokka
          target-folder: docs/apidoc/
          clean: true
          commit-message: 'doc: Deployed dokka website'

  # Github Release Action on tag push
  release:
    name: üö∞ Release new version.
    needs: [ build ]
    if: startsWith(github.ref, 'refs/tags/') && needs.build.result == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Check out the source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v2.9.0
        with:
          configuration: ".github/config/configuration.json"
          commitMode: true
          ignorePreReleases: ${{ !contains(github.ref, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download all the build artifacts
        uses: actions/download-artifact@v2
        with:
          path: release-artifacts

      - name: Github Release (version = ${{ needs.build.outputs.version }})
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          prerelease: ${{ contains(github.event.inputs.version, '-rc') || contains(github.event.inputs.version, '-b') || contains(github.event.inputs.version, '-a') }}
          files: |
            ${{ github.workspace }}/release-artifacts/**
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # Run Java Application on OpenJDK docker images
  container-build:
    name: üö¢ Java on Container
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        jdk: [ "openjdk:19-slim", "openjdk:18-alpine", "eclipse-temurin:17-alpine" ]

    defaults:
      run:
        shell: sh

    container:
      image: ${{ matrix.jdk }}

    steps:
      - name: Check out the source code
        uses: actions/checkout@v3

      - name: Run Java App on OpenJDK ${{ matrix.jdk }} container image
        if: always()
        run: |
          java -ea --show-version src/main/java/JavaApp.java
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - name: Github Action Contexts
        run: |
          echo "$JOB_CONTEXT"
          echo "$STEPS_CONTEXT"
          echo "$RUNNER_CONTEXT"
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
          RUNNER_CONTEXT: ${{ toJson(runner) }}
