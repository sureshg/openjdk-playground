[versions]
java                           = "21"
kotlin                         = "1.8.20-RC"
kotlin-ksp                     = "1.8.20-RC-1.0.9"
kotlin-jvmtarget               = "19"
kotlin-api-version             = "1.9"
kotlin-lang-version            = "1.9"
kotlin-dsl-jvmtarget           = "11"
gradle                         = "8.2-20230309232428+0000"
java-vendor                    = "Oracle"
java-jvmArguments              = "--enable-preview"
java-addModules                = "jdk.incubator.concurrent,jdk.incubator.vector"

# Additional metadata
group                          = "dev.suresh"
app-mainclass                  = "dev.suresh.Main"
app-module                     = "dev.suresh.openjdkplayground"
githubProject                  = "https://github.com/sureshg/openjdk-playground"

# Gradle Dependencies Versions
ajalt-clikt                    = "3.5.2"
ajalt-mordant                  = "2.0.0-beta11"
ajalt-colormath                = "3.2.0"
assertj                        = "3.21.0"
beryx-textio                   = "3.4.1"
bucket4j                       = "7.1.0"
concurrent-jctools             = "3.3.0"
crypto-bcprov                  = "1.70"
crypto-conscrypt               = "2.5.2"
crypto-saltycoffee             = "1.0.4"
crypto-tink                    = "1.6.1"
cytodynamics-nucleus           = "0.2.0"
cv-boofcv                      = "0.40.1"
db-scheduler                   = "10.5"
db-shedlock                    = "4.33.0"
db-sherlock                    = "0.4.14"
dokka                          = "1.8.10"
dokka-mermaid                  = "0.4.4"
dikt                           = "1.0.0-alpha8"
dir-watcher                    = "0.18.0"
failsafe                       = "3.2.0"
fastutil                       = "8.5.12"
google-auto-service            = "1.0.1"
google-tink                    = "1.6.1"
graalvm                        = "22.3.1"
graalvm-hint                   = "0.19.0"
grpc                           = "1.39.0"
grpc-kotlin                    = "1.2.0"
http-common                    = "0.10.0"
imageio-twelvemonkeys          = "3.8.1"
jakewharton-picnic             = "0.4.0"
jakewharton-crossword          = "0.2.0"
jackson-databind               = "2.14.2"
javaagent-allocation           = "3.3.1"
jetbrains-markdown             = "0.2.4"
jetty                          = "12.0.0.beta0"
jetty-jakarta-servlet          = "5.0.2"
jgit                           = "6.2.0.202206071550-r"
jgitver                        = "0.10.0-rc03"
jmdns                          = "3.5.8"
jreleaser                      = "0.9.1"
jspecify                       = "0.3.0"
jte                            = "2.3.0"
junit                          = "5.9.2"
junit-pioneer                  = "2.0.0"
jqwik                          = "1.6.0"
jSystemThemeDetector           = "3.6"
kmath                          = "0.2.1"
kotlinx-atomicfu               = "0.20.0"
kotlinx-coroutines             = "1.7.0-Beta"
kotlinx-collections-immutable  = "0.3.5"
kotlinx-cli                    = "0.3.4"
kotlinx-datetime               = "0.4.0"
kotlinx-lincheck               = "2.16"
kotlinx-reflect-lite           = "1.0.0"
kotlinx-io-jvm                 = "0.1.16"
kotlinx-serialization          = "1.5.0"
kotlinx-serialization-yaml     = "0.17.0"
kotlinx-serialization-csv      = "2.0.0"
kotlinx-html                   = "0.7.5"
kotlin-wrappers                = "1.0.0-pre.347"
kotlin-dsl-version             = "4.0.9"
kodein                         = "7.10.0"
koin                           = "3.1.5"
kotlininject                   = "0.4.1"
kotest                         = "5.5.5"
ksp-auto-service               = "1.0.0"
ksp-redacted                   = "1.3.0-1.8.20-Beta"
ksp-powerassert                = "0.12.0"
ktor                           = "2.1.0"
kubernetes-client              = "18.0.0"
lwjgl                          = "3.3.0"
libgdx                         = "1.10.0"
log4j                          = "2.20.0"
logback                        = "1.4.5"
maven-archeologist             = "0.0.10"
mockk                          = "1.13.4"
os-appdirs                     = "1.2.1"
os-oshi                        = "6.1.2"
os-jfa                         = "1.2.0"
protobuf                       = "3.18.1"
profiler-ap-loader             = "2.8.3"
reflect-classgraph             = "4.8.157"
reflect-typeparamresolver      = "1.0.2"
reflect-typetools              = "0.6.3"
rsocket                        = "0.15.4"
semver                         = "1.0.0"
shapeshift                     = "0.5.0"
slf4j                          = "2.0.6"
sourceBuddy                    = "2.2.0"
testcontainers                 = "1.17.6"
tcp-javanioproxy               = "1.6"
togglz                         = "3.1.1"
versioncompare                 = "1.5.0"
violations                     = "1.149.2"
zip-prefixer                   = "0.3.1"

# Plugin versions
benmanes                       = "0.46.0"
beryx-jlink                    = "2.24.4"
beryx-runtime                  = "1.12.7"
beryx-jar                      = "2.0.0"
champeau-includegit            = "0.1.6"
champeau-japicmp               = "0.3.0"
champeau-jmh                   = "0.6.6"
champeau-mrjar                 = "0.1"
classpath-collisiondetector    = "0.3"
cyclonedx-plugin               = "1.7.4"
foojay-toolchains              = "0.1"
idea-ext                       = "1.1.7"
git-properties                 = "2.4.1"
google-javaformat              = "1.16.0"
graalvm-nativeimage            = "0.9.11"
gradle-checksum                = "1.3.0"
gradle-enterprise              = "3.12.4"
gradlex-buildparameters        = "1.0"
jetbrains-exposed              = "0.2.1"
javaagent-application          = "0.5.0"
ktfmt                          = "0.43"
ktlint                         = "0.47.1"
licenser                       = "0.6.1"
maven-plugindev                = "0.4.0"
nexus-publish                  = "1.3.0"
osdetector                     = "1.7.0"
openrewrite                    = "5.32.0"
protobuf-plugin                = "0.9.2"
shadow                         = "8.1.0"
spotless                       = "6.17.0"
semver-plugin                  = "0.5.0-alpha.1"
taskinfo                       = "2.1.0"
versioncatalog-update          = "0.7.0"
dependency-analysis            = "1.19.0"
best-practices-plugin          = "0.9"

# Composite build versions
module-jdk                     = "1.0.0"

# Gradle Dependencies
[libraries]
ajalt-clikt             = { module = "com.github.ajalt.clikt:clikt"                    , version.ref = "ajalt-clikt"}
ajalt-mordant           = { module = "com.github.ajalt.mordant:mordant"                , version.ref = "ajalt-mordant"}
ajalt-colormath         = { module = "com.github.ajalt.colormath:colormath"            , version.ref = "ajalt-colormath"}
beryx-textio            = { module = "org.beryx:text-io"                               , version.ref = "beryx-textio"}
bucket4j-core           = { module = "com.github.vladimir-bukhtoyarov:bucket4j-core"   , version.ref = "bucket4j"}
compose-theme-detect    = { module = "com.github.Dansoftowner:jSystemThemeDetector"     , version.ref = "jSystemThemeDetector"}

concurrent-jctools      = { module = "org.jctools:jctools-core"                         , version.ref = "concurrent-jctools"}
crypto-bcprov           = { module = "org.bouncycastle:bcprov-jdk15on"                  , version.ref = "crypto-bcprov"}
crypto-conscrypt        = { module = "org.conscrypt:conscrypt-openjdk"                  , version.ref = "crypto-conscrypt"}
crypto-conscrypt-uber   = { module = "org.conscrypt:conscrypt-openjdk-uber"             , version.ref = "crypto-conscrypt"}
crypto-tink             = { module = "com.google.crypto.tink:tink"                      , version.ref = "crypto-tink"}
crypto-saltycoffee      = { module = "software.pando.crypto:salty-coffee"               , version.ref = "crypto-saltycoffee"}

cytodynamics-nucleus    = { module = "com.linkedin.cytodynamics:cytodynamics-nucleus"  , version.ref = "cytodynamics-nucleus"}
cv-boofcv-core          = { module = "org.boofcv:boofcv-core"                          , version.ref = "cv-boofcv"}

db-scheduler            = { module = "com.github.kagkarlsson:db-scheduler"             , version.ref = "db-scheduler"}
db-shedlock-core        = { module = "net.javacrumbs.shedlock:shedlock-core"           , version.ref = "db-shedlock"}
db-shedlock-jdbc        = { module = "net.javacrumbs.shedlock:shedlock-provider-jdbc"  , version.ref = "db-shedlock"}
db-sherlock-sql         = { module = "com.coditory.sherlock:sherlock-sql"              , version.ref = "db-sherlock"}

directory-watcher       = { module = "io.methvin:directory-watcher"                    , version.ref = "dir-watcher"}
failsafe                = { module = "dev.failsafe:failsafe"                           , version.ref = "failsafe"}
fastutil                = { module = "it.unimi.dsi:fastutil"                           , version.ref = "fastutil"}
fastutil-core           = { module = "it.unimi.dsi:fastutil-core"                      , version.ref = "fastutil"}
jakewharton-picnic      = { module = "com.jakewharton.picnic:picnic"                   , version.ref = "jakewharton-picnic"}
jakewharton-crossword   = { module = "com.jakewharton.crossword:crossword"             , version.ref = "jakewharton-crossword"}

jetty-bom               = { module = "org.eclipse.jetty:jetty-bom"                            , version.ref = "jetty"}
jetty-server            = { module = "org.eclipse.jetty:jetty-server"                         , version.ref = "jetty"}
jetty-http2-server      = { module = "org.eclipse.jetty.http2:http2-server"                   , version.ref = "jetty"}
jetty-util              = { module = "org.eclipse.jetty:jetty-util"                           , version.ref = "jetty"}
jetty-ee10-servlet      = { module = "org.eclipse.jetty.ee10:jetty-ee10-servlet"              , version.ref = "jetty"}
jetty-ee10-proxy        = { module = "org.eclipse.jetty.ee10:jetty-ee10-proxy"                , version.ref = "jetty"}
jetty-ee10-annotations  = { module = "org.eclipse.jetty.ee10:jetty-ee10-annotations"          , version.ref = "jetty"}


google-auto-annotations     = { module = "com.google.auto.service:auto-service-annotations" , version.ref = "google-auto-service"}
google-tink                 =  { module = "com.google.crypto.tink:tink"                     , version.ref = "google-tink"}

graalvm-sdk                 = { module = "org.graalvm.sdk:graal-sdk"                        , version.ref = "graalvm"}
graalvm-svm                 = { module = "org.graalvm.nativeimage:svm"                      , version.ref = "graalvm"}
graalvm-svmlibffi           = { module = "org.graalvm.nativeimage:svm-libffi"               , version.ref = "graalvm"}
graalvm-truffle-api         = { module = "org.graalvm.truffle:truffle-api"                  , version.ref = "graalvm"}
graalvm-js                  = { module = "org.graalvm.js:js"                                , version.ref = "graalvm"}

graalvm-hint-processor      = { module = "io.goodforgod:graalvm-hint-processor"             , version.ref = "graalvm-hint"}
graalvm-hint-annotations    = { module = "io.goodforgod:graalvm-hint-annotations"           , version.ref = "graalvm-hint"}

grpc-protobuf               = { module = "io.grpc:grpc-protobuf"                            , version.ref = "grpc"}
grpc-kotlin                 = { module = "io.grpc:grpc-kotlin-stub"                         , version.ref = "grpc-kotlin"}

http-common                 = { module = "io.goodforgod:http-common"                        , version.ref = "http-common"}
protobuf-javautil           = { module = "com.google.protobuf:protobuf-java-util"           , version.ref = "protobuf"}
protobuf-kotlin             = { module = "com.google.protobuf:protobuf-kotlin"              , version.ref = "protobuf"}

twelvemonkeys-core          = { module = "com.twelvemonkeys.imageio:imageio-core"           , version.ref = "imageio-twelvemonkeys"}
twelvemonkeys-icns          = { module = "com.twelvemonkeys.imageio:imageio-icns"           , version.ref = "imageio-twelvemonkeys"}
twelvemonkeys-webp          = { module = "com.twelvemonkeys.imageio:imageio-webp"           , version.ref = "imageio-twelvemonkeys"}

jackson-databind           = { module = "com.fasterxml.jackson.core:jackson-databind"        , version.ref = "jackson-databind"}
jetbrains-markdown         = { module = "org.jetbrains:markdown"                             , version.ref = "jetbrains-markdown"}
jmdns                      = { module = "org.jmdns:jmdns"                                    , version.ref = "jmdns"}
jspecify                   = { module = "org.jspecify:jspecify"                              , version.ref = "jspecify"}

javaagent-allocation       = { module = "com.google.code.java-allocation-instrumenter:java-allocation-instrumenter" , version.ref = "javaagent-allocation"}

dokka-javadoc              = { module = "org.jetbrains.dokka:javadoc-plugin"                , version.ref = "dokka"}
dokka-kotlinasjava         = { module = "org.jetbrains.dokka:kotlin-as-java-plugin"         , version.ref = "dokka"}
dokka-gfm                  = { module = "org.jetbrains.dokka:gfm-plugin"                    , version.ref = "dokka"}
dokka-jekyll               = { module = "org.jetbrains.dokka:jekyll-plugin"                 , version.ref = "dokka"}
dokka-mathjax              = { module = "org.jetbrains.dokka:mathjax-plugin"                , version.ref = "dokka"}
dokka-mermaid              = { module = "com.glureau:html-mermaid-dokka-plugin"             , version.ref = "dokka-mermaid"}

kotlin-bom                 = { module = "org.jetbrains.kotlin:kotlin-bom"                    , version.ref = "kotlin"}
kotlin-stdlib              = { module = "org.jetbrains.kotlin:kotlin-stdlib"                 , version.ref = "kotlin"}
kotlin-reflect             = { module = "org.jetbrains.kotlin:kotlin-reflect"                , version.ref = "kotlin"}
kotlin-test                = { module = "org.jetbrains.kotlin:kotlin-test"                   , version.ref = "kotlin"}
kotlin-test-junit          = { module = "org.jetbrains.kotlin:kotlin-test-junit"             , version.ref = "kotlin"}
kotlin-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable"    , version.ref = "kotlin"}
kotlin-script-runtime      = { module = "org.jetbrains.kotlin:kotlin-script-runtime"         , version.ref = "kotlin"}
kotlin-script-util         = { module = "org.jetbrains.kotlin:kotlin-script-util"            , version.ref = "kotlin"}
kotlin-script-jsr223       = { module = "org.jetbrains.kotlin:kotlin-scripting-jsr223"       , version.ref = "kotlin"}
kotlin-script-mainkts      = { module = "org.jetbrains.kotlin:kotlin-main-kts"               , version.ref = "kotlin"}

kotlinx-coroutines-core    = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core"      , version.ref = "kotlinx-coroutines"}
kotlinx-coroutines-jdk8    = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8"      , version.ref = "kotlinx-coroutines"}
kotlinx-coroutines-slf4j   = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j"     , version.ref = "kotlinx-coroutines"}
kotlinx-coroutines-test    = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test"      , version.ref = "kotlinx-coroutines"}
kotlinx-coroutines-debug   = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug"     , version.ref = "kotlinx-coroutines"}
kotlinx-datetime                  = { module = "org.jetbrains.kotlinx:kotlinx-datetime"                  , version.ref = "kotlinx-datetime"}
kotlinx-atomicfu                  = { module = "org.jetbrains.kotlinx:atomicfu"                          , version.ref = "kotlinx-atomicfu"}
kotlinx-lincheck                  = { module = "org.jetbrains.kotlinx:lincheck"                          , version.ref = "kotlinx-lincheck"}
kotlinx-reflect-lite              = { module = "org.jetbrains.kotlinx:kotlinx.reflect.lite"              , version.ref = "kotlinx-reflect-lite"}
kotlinx-io-jvm                    = { module = "org.jetbrains.kotlinx:kotlinx-io-jvm"                    , version.ref = "kotlinx-io-jvm"}
kotlinx-cli                       = { module = "org.jetbrains.kotlinx:kotlinx-cli"                       , version.ref = "kotlinx-cli"}
kotlinx-collections-immutable     = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable-jvm" , version.ref = "kotlinx-collections-immutable"}
kotlinx-serialization-core        = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core"        , version.ref = "kotlinx-serialization"}
kotlinx-serialization-json        = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json"        , version.ref = "kotlinx-serialization"}
kotlinx-serialization-json-okio   = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-okio"   , version.ref = "kotlinx-serialization"}
kotlinx-serialization-cbor        = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor"        , version.ref = "kotlinx-serialization"}
kotlinx-serialization-hocon       = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon"       , version.ref = "kotlinx-serialization"}
kotlinx-serialization-protobuf    = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf"    , version.ref = "kotlinx-serialization"}
kotlinx-serialization-properties  = { module = "org.jetbrains.kotlinx:kotlinx-serialization-properties"  , version.ref = "kotlinx-serialization"}
kotlinx-serialization-yaml        = { module = "com.charleskorn.kaml:kaml"                               , version.ref = "kotlinx-serialization-yaml"}
kotlinx-serialization-csv         = { module = "de.brudaswen.kotlinx.serialization:kotlinx-serialization-csv" , version.ref = "kotlinx-serialization-csv"}

kotest-core                = { module = "io.kotest:kotest-assertions-core"                 , version.ref = "kotest"}
kotest-junit5              = { module = "io.kotest:kotest-runner-junit5"                   , version.ref = "kotest"}
kotest-property            = { module = "io.kotest:kotest-property"                        , version.ref = "kotest"}

ktor-bom                    = { module = "io.ktor:ktor-bom"                                 , version.ref = "ktor"}
ktor-server                 = { module = "io.ktor:ktor-server-core"                         , version.ref = "ktor"}
ktor-auth                   = { module = "io.ktor:ktor-auth"                                , version.ref = "ktor"}
ktor-serialization          = { module = "io.ktor:ktor-serialization"                       , version.ref = "ktor"}
ktor-server-host-common     = { module = "io.ktor:ktor-server-host-common"                  , version.ref = "ktor"}
ktor-server-netty           = { module = "io.ktor:ktor-server-netty"                        , version.ref = "ktor"}
ktor-server-tests           = { module = "io.ktor:ktor-server-tests"                        , version.ref = "ktor"}

ktor-client                 = { module = "io.ktor:ktor-client-core"                         , version.ref = "ktor"}
ktor-client-cio             = { module = "io.ktor:ktor-client-cio"                          , version.ref = "ktor"}
ktor-client-java            = { module = "io.ktor:ktor-client-java"                         , version.ref = "ktor"}
ktor-client-okhttp          = { module = "io.ktor:ktor-client-okhttp"                         , version.ref = "ktor"}
ktor-client-jetty           = { module = "io.ktor:ktor-client-jetty"                        , version.ref = "ktor"}
ktor-client-serialization   = { module = "io.ktor:ktor-client-serialization"                , version.ref = "ktor"}
ktor-client-websockets      = { module = "io.ktor:ktor-client-websockets"                   , version.ref = "ktor"}
ktor-client-auth            = { module = "io.ktor:ktor-client-auth"                         , version.ref = "ktor"}
ktor-client-logging         = { module = "io.ktor:ktor-client-logging"                      , version.ref = "ktor"}

rsocket-ktor-client         = { module = "io.rsocket.kotlin:rsocket-ktor-client"            , version.ref = "rsocket"}
rsocket-ktor-server         = { module = "io.rsocket.kotlin:rsocket-ktor-server"            , version.ref = "rsocket"}

jgit                        = { module = "org.eclipse.jgit:org.eclipse.jgit"          , version.ref = "jgit" }
jte                         = { module = "gg.jte:jte"                                 , version.ref = "jte" }
jte-runtime                 = { module = "gg.jte:jte-runtime"                         , version.ref = "jte" }
jte-kotlin                  = { module = "gg.jte:jte-kotlin"                          , version.ref = "jte" }
junit-bom                   = { module = "org.junit:junit-bom"                        , version.ref = "junit"}
junit-jupiter               = { module = "org.junit.jupiter:junit-jupiter"            , version.ref = "junit"}
junit-jupiter-api           = { module = "org.junit.jupiter:junit-jupiter-api"        , version.ref = "junit"}
junit-jupiter-engine        = { module = "org.junit.jupiter:junit-jupiter-engine"     , version.ref = "junit"}
junit-jupiter-params        = { module = "org.junit.jupiter:junit-jupiter-params"     , version.ref = "junit"}
junit-pioneer               = { module = "org.junit-pioneer:junit-pioneer"            , version.ref = "junit-pioneer"}
jqwik                       = { module = "net.jqwik:jqwik"                            , version.ref = "jqwik"}

ksp-auto-service            = { module = "dev.zacsweers.autoservice:auto-service-ksp" , version.ref = "ksp-auto-service"}

koin-core                   = { module = "io.insert-koin:koin-core"                         , version.ref = "koin"}
koin-ktor                   = { module = "io.insert-koin:koin-ktor"                         , version.ref = "koin"}
koin-slf4j                  = { module = "io.insert-koin:koin-logger-slf4j"                 , version.ref = "koin"}
koin-test                   = { module = "io.insert-koin:koin-test"                         , version.ref = "koin"}
koin-test-junit5            = { module = "io.insert-koin:koin-test-junit5"                  , version.ref = "koin"}
kodein                      = { module = "org.kodein.di:kodein-di"                          , version.ref = "kodein"}
kotlininject-kspcompiler    = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp"     , version.ref = "kotlininject"}
kotlininject-runtime        = { module = "me.tatarka.inject:kotlin-inject-runtime"          , version.ref = "kotlininject"}

kmath-core                  = { module = "space.kscience:kmath-core"                        , version.ref = "kmath"}
game-lwjgl-bom              = { module = "org.lwjgl:lwjgl-bom"                              , version.ref = "lwjgl"}
game-libgdx                 = { module = "com.badlogicgames.gdx:gdx"                        , version.ref = "libgdx"}
maven-archeologist          = { module = "com.squareup.tools.build:maven-archeologist"      , version.ref = "maven-archeologist"}
mockk                       = { module = "io.mockk:mockk"                                   , version.ref = "mockk"}

profiler-ap-loader           = { module = "me.bechberger:ap-loader"                          , version.ref = "profiler-ap-loader"}
reflect-classgraph           = { module = "io.github.classgraph:classgraph"                  , version.ref = "reflect-classgraph"}
reflect-typeparamresolver    = { module = "net.harawata.reflection:typeparameterresolver"    , version.ref = "reflect-typeparamresolver"}
reflect-typetools            = { module = "net.jodah:typetools"                              , version.ref = "reflect-typetools"}
sourceBuddy                  = { module = "com.javax0.sourcebuddy:SourceBuddy"               , version.ref = "sourceBuddy"}

os-appdirs                  = { module = "net.harawata:appdirs"                             , version.ref = "os-appdirs"}
os-oshi                     = { module = "com.github.oshi:oshi-core"                        , version.ref = "os-oshi"}
os-mac-jfa                  = { module = "de.jangassen:jfa"                                 , version.ref = "os-jfa"}

slf4j-api                   = { module = "org.slf4j:slf4j-api"                              , version.ref = "slf4j"}
slf4j-simple                = { module = "org.slf4j:slf4j-simple"                           , version.ref = "slf4j"}
slf4j-log4j12               = { module = "org.slf4j:slf4j-log4j12"                          , version.ref = "slf4j"}
slf4j-nop                   = { module = "org.slf4j:slf4j-nop"                              , version.ref = "slf4j"}
slf4j-jul                   = { module = "org.slf4j:slf4j-jul"                              , version.ref = "slf4j"}
log4j-core                  = { module = "org.apache.logging.log4j:log4j-core"             , version.ref = "log4j"}
log4j-bom                   = { module = "org.apache.logging.log4j:log4j-bom"              , version.ref = "log4j"}
logback-classic             = { module = "ch.qos.logback:logback-classic"                   , version.ref = "logback"}
logback-core                = { module = "ch.qos.logback:logback-core"                      , version.ref = "logback"}

semver                      = { module = "io.github.z4kn4fein:semver"                       , version.ref = "semver"}
shapeshift                  = { module = "dev.krud:shapeshift"                              , version.ref = "shapeshift"}
versioncompare              = { module = "io.github.g00fy2:versioncompare"                  , version.ref = "versioncompare"}

testcontainers-bom          = { module = "org.testcontainers:testcontainers-bom"           , version.ref = "testcontainers"}
testcontainers-core         = { module = "org.testcontainers:testcontainers" }
testcontainers-postgresql   = { module = "org.testcontainers:postgresql" }
testcontainers-cassandra    = { module = "org.testcontainers:cassandra" }
testcontainers-k3s          = { module = "org.testcontainers:k3s" }
testcontainers-clickhouse   = { module = "org.testcontainers:clickhouse" }
testcontainers-junit        = { module = "org.testcontainers:junit-jupiter" }
kubernetes-client           = { module = "io.kubernetes:client-java"                       , version.ref = "kubernetes-client"}
tcp-javanioproxy            = { module = "com.github.terma:javaniotcpproxy"                , version.ref = "tcp-javanioproxy"}
togglz-core                 = { module = "org.togglz:togglz-core"                          , version.ref = "togglz"}
violations                  = { module = "se.bjurr.violations:violations-lib"              , version.ref = "violations" }

module-ffm-api              = { module = "dev.suresh:ffm-api"                              , version.ref = "module-jdk" }
module-jvm-agent            = { module = "dev.suresh:jvm-agent"                            , version.ref = "module-jdk" }

# External plugins for precompiled script plugins
build-kotlin                    = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin"                      , version.ref = "kotlin"}
build-dokka                     = { module = "org.jetbrains.dokka:dokka-gradle-plugin"                        , version.ref = "dokka"}
build-benmanesversions          = { module = "com.github.ben-manes:gradle-versions-plugin"                    , version.ref = "benmanes"}
build-gradlex-buildparameters   = { module = "org.gradlex:build-parameters"                                   , version.ref = "gradlex-buildparameters"}
build-gradle-enterprise         = { module = "com.gradle.enterprise:com.gradle.enterprise.gradle.plugin"      , version.ref = "gradle-enterprise" }
build-jte-plugin                = { module = "gg.jte:jte-gradle-plugin"                                       , version.ref = "jte"}
build-nexus-plugin              = { module = "io.github.gradle-nexus:publish-plugin"                          , version.ref = "nexus-publish"}
build-spotless-plugin           = { module = "com.diffplug.spotless:spotless-plugin-gradle"                   , version.ref = "spotless"}
build-shadow-plugin             = { module = "com.github.johnrengelman:shadow"                                , version.ref = "shadow"}
build-taskinfo                  = { module = "org.barfuin.gradle.taskinfo:gradle-taskinfo"                    , version.ref = "taskinfo" }
build-dependencyanalysis        = { module = "com.autonomousapps:dependency-analysis-gradle-plugin"           , version.ref = "dependency-analysis" }
build-bestpractices-plugin      = { module = "com.autonomousapps:plugin-best-practices-plugin"                , version.ref = "best-practices-plugin" }
build-openrewrite-plugin        = { module = "org.openrewrite:plugin"                                         , version.ref = "openrewrite" }
build-maven-plugindev           = { module = "de.benediktritter:plugin"                                       , version.ref = "maven-plugindev" }
build-includegit-plugin         = { module = "me.champeau.gradle.includegit:plugin"                           , version.ref = "champeau-includegit" }
build-cyclonedx-plugin          = { module = "org.cyclonedx:cyclonedx-gradle-plugin"                          , version.ref = "cyclonedx-plugin" }
build-javaagent-plugin          = { module = "com.ryandens:plugin"                                            , version.ref = "javaagent-application" }
build-semver-plugin             = { module = "com.javiersc.semver:semver-gradle-plugin"                       , version.ref = "semver-plugin" }
build-zip-prefixer              = { module = "net.e175.klaus:zip-prefixer"                                    , version.ref = "zip-prefixer" }
build-idea-ext                  = { module = "gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext"        , version.ref = "idea-ext" }
build-cp-collisiondetector      = { module = "io.fuchs.gradle.classpath-collision-detector:classpath-collision-detector" , version.ref = "classpath-collisiondetector" }
build-includegit                = { module = "me.champeau.gradle.includegit:plugin"                           , version.ref = "champeau-includegit" }

# Gradle  Plugins
[plugins]
benmanes                    = { id = "com.github.ben-manes.versions"                         , version.ref = "benmanes" }
beryx-jlink                 = { id = "org.beryx.jlink"                                       , version.ref = "beryx-jlink" }
beryx-runtime               = { id = "org.beryx.runtime"                                     , version.ref = "beryx-runtime" }
beryx-jar                   = { id = "org.beryx.jar"                                         , version.ref = "beryx-jar" }
champeau-includegit         = { id = "me.champeau.includegit"                                , version.ref = "champeau-includegit"}
champeau-japicmp            = { id = "me.champeau.gradle.japicmp"                            , version.ref = "champeau-japicmp"}
champeau-jmh                = { id = "me.champeau.jmh"                                       , version.ref = "champeau-jmh"}
champeau-mrjar              = { id = "me.champeau.mrjar"                                     , version.ref = "champeau-mrjar"}
dependency-analysis         = { id = "com.autonomousapps.dependency-analysis"                , version.ref = "dependency-analysis" }
dikt                        = { id = "io.github.sergeshustoff.dikt"                          , version.ref = "dikt"}
foojay-toolchains           = { id = "org.gradle.disco-toolchains"                           , version.ref = "foojay-toolchains"}
git-properties              = { id = "com.gorylenko.gradle-git-properties"                   , version.ref = "git-properties" }
graalvm-nativeimage         = { id = "org.graalvm.buildtools.native"                         , version.ref = "graalvm-nativeimage"}
gradle-checksum             = { id = "org.gradle.crypto.checksum"                            , version.ref = "gradle-checksum"}
gradlex-buildparameters     = { id = "org.gradlex.build-parameters"                          , version.ref = "gradlex-buildparameters"}
javaagent-application       = { id = "com.ryandens.javaagent-application"                    , version.ref = "javaagent-application"}
jetbrains-exposed           = { id = "com.jetbrains.exposed.gradle.plugin"                   , version.ref = "jetbrains-exposed"}
jgitver                     = { id = "fr.brouillard.oss.gradle.jgitver"                      , version.ref = "jgitver" }
jreleaser                   = { id = "org.jreleaser"                                         , version.ref = "jreleaser" }
jte                         = { id = "gg.jte.gradle"                                         , version.ref = "jte" }
kotlin-dsl                  = { id = "org.gradle.kotlin.kotlin-dsl"                          , version.ref = "kotlin-dsl-version" }
kotlin-jvm                  = { id = "org.jetbrains.kotlin.jvm"                              , version.ref = "kotlin" }
kotlin-dokka                = { id = "org.jetbrains.dokka"                                   , version.ref = "dokka" }
kotlin-kapt                 = { id = "org.jetbrains.kotlin.kapt"                             , version.ref = "kotlin" }
kotlin-multiplatform        = { id = "org.jetbrains.kotlin.multiplatform"                    , version.ref = "kotlin" }
kotlinx-serialization       = { id = "org.jetbrains.kotlin.plugin.serialization"             , version.ref = "kotlin" }
ksp                         = { id = "com.google.devtools.ksp"                               , version.ref = "kotlin-ksp"}
ksp-redacted                = { id = "dev.zacsweers.redacted"                                , version.ref = "ksp-redacted" }
ksp-powerassert             = { id = "com.bnorm.power.kotlin-power-assert"                   , version.ref = "ksp-powerassert" }
licenser                    = { id = "org.cadixdev.licenser"                                 , version.ref = "licenser" }
nexus-publish               = { id = "io.github.gradle-nexus.publish-plugin"                 , version.ref = "nexus-publish" }
osdetector                  = { id = "com.google.osdetector"                                 , version.ref = "osdetector" }
protobuf                    = { id = "com.google.protobuf"                                   , version.ref = "protobuf-plugin" }
spotless                    = { id = "com.diffplug.spotless"                                 , version.ref = "spotless" }
shadow                      = { id = "com.github.johnrengelman.shadow"                       , version.ref = "shadow" }
versioncatalog-update       = { id = "nl.littlerobots.version-catalog-update"                , version.ref = "versioncatalog-update" }


[bundles]
ktor-server                 = ["ktor-server", "ktor-serialization", "ktor-auth", "ktor-server-host-common", "ktor-server-netty", "logback-classic"]
ktor-client                 = ["ktor-client", "ktor-client-java", "ktor-client-serialization", "ktor-client-logging", "logback-classic"]