// Generated by jextract

package org.unix;

import java.lang.foreign.FunctionDescriptor;
import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;

import static java.lang.foreign.ValueLayout.OfInt;
final class constants$29 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$29() {}
    static final FunctionDescriptor fsctl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle fsctl$MH = RuntimeHelper.downcallHandle(
        "fsctl",
        constants$29.fsctl$FUNC
    );
    static final FunctionDescriptor ffsctl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle ffsctl$MH = RuntimeHelper.downcallHandle(
        "ffsctl",
        constants$29.ffsctl$FUNC
    );
    static final FunctionDescriptor fsync_volume_np$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle fsync_volume_np$MH = RuntimeHelper.downcallHandle(
        "fsync_volume_np",
        constants$29.fsync_volume_np$FUNC
    );
    static final FunctionDescriptor sync_volume_np$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sync_volume_np$MH = RuntimeHelper.downcallHandle(
        "sync_volume_np",
        constants$29.sync_volume_np$FUNC
    );
    static final OfInt optreset$LAYOUT = Constants$root.C_INT$LAYOUT;
    static final VarHandle optreset$VH = constants$29.optreset$LAYOUT.varHandle();
    static final MemorySegment optreset$SEGMENT = RuntimeHelper.lookupGlobalVariable("optreset", constants$29.optreset$LAYOUT);
    static final MemorySegment __DARWIN_SUF_64_BIT_INO_T$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("$INODE64");
}


