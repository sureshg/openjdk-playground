<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <name>Sample App</name>
  <groupId>dev.suresh</groupId>
  <artifactId>sample-app</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <app.main.class>org.openjdk.jmh.Main</app.main.class>
    <build-helper.plugin.version>3.0.0</build-helper.plugin.version>
    <checkstyle.plugin.version>3.1.1</checkstyle.plugin.version>
    <clean.plugin.version>3.1.0</clean.plugin.version>

    <!-- Application config -->
    <compiler.plugin.version>3.8.1</compiler.plugin.version>
    <conveofmt.plugin.version>2.6.0</conveofmt.plugin.version>
    <dependency.plugin.version>3.1.2</dependency.plugin.version>

    <!-- Compiler versions -->
    <deploy.plugin.version>3.0.0-M1</deploy.plugin.version>
    <enforcer.plugin.version>3.0.0-M3</enforcer.plugin.version>
    <exec.plugin.version>1.6.0</exec.plugin.version>
    <execjar.plugin.version>1.5.0</execjar.plugin.version>
    <execjar.plugin.version>1.5.0</execjar.plugin.version>

    <!-- Dependency versions -->
    <executable.name>sample-app</executable.name>
    <extra-enforcer-rules.plugin.version>1.2</extra-enforcer-rules.plugin.version>
    <gitcommit.plugin.version>2.2.5</gitcommit.plugin.version>
    <github.pkg.url>https://maven.pkg.github.com/sureshg/openjdk-playground</github.pkg.url>

    <!-- plugin versions -->
    <github.url>https://github.com/sureshg/openjdk-playground</github.url>
    <google-java-format.version>1.8</google-java-format.version>
    <gpg.plugin.version>1.6</gpg.plugin.version>
    <gpg.plugin.version>1.6</gpg.plugin.version>
    <install.plugin.version>3.0.0-M1</install.plugin.version>
    <jar.plugin.version>3.1.2</jar.plugin.version>
    <javac.target>11</javac.target>
    <javadoc.plugin.version>3.0.1</javadoc.plugin.version>
    <jmh.generator>default</jmh.generator>
    <jmh.version>1.23</jmh.version>
    <jsr305.version>3.0.2</jsr305.version>
    <kotlin.code.style>official</kotlin.code.style>
    <kotlin.compiler.jvmTarget>${javac.target}</kotlin.compiler.jvmTarget>
    <kotlin.version>1.8.0</kotlin.version>
    <maven.version>3.6</maven.version>
    <nexus-staging.plugin.version>1.6.8</nexus-staging.plugin.version>
    <project.build.outputTimestamp>2020-04-19T01:51:00Z</project.build.outputTimestamp>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <release.plugin.version>2.5.3</release.plugin.version>
    <resources.plugin.version>3.1.0</resources.plugin.version>
    <shade.plugin.version>3.2.3</shade.plugin.version>
    <site.plugin.version>3.7.1</site.plugin.version>
    <slf4j.version>1.7.30</slf4j.version>
    <source.plugin.version>3.0.1</source.plugin.version>
    <spotbug.plugin.version>3.1.12</spotbug.plugin.version>
    <surefire.plugin.version>3.0.0-M2</surefire.plugin.version>
    <uberjar.name>uber</uberjar.name>
    <versions.plugin.version>2.7</versions.plugin.version>
  </properties>

  <!-- Dependencies -->
  <scm>
    <connection>scm:git:${github.url}.git</connection>
    <developerConnection>scm:git:${github.url}.git
    </developerConnection>
    <tag>HEAD</tag>
    <url>${github.url}</url>
  </scm>
  <inceptionYear>2020</inceptionYear>
  <url>${github.url}</url>

  <issueManagement>
    <system>github</system>
    <url>${github.url}/issues</url>
  </issueManagement>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Kotlin compiler plugin -->
        <plugin>
          <artifactId>kotlin-maven-plugin</artifactId>
          <groupId>org.jetbrains.kotlin</groupId>
          <version>${kotlin.version}</version>
        </plugin>

        <!-- Java compiler plugin -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${compiler.plugin.version}</version>
        </plugin>

        <!-- Maven shade (uber jar) plugin -->
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${shade.plugin.version}</version>
        </plugin>

        <!-- Maven version enforcer -->
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${enforcer.plugin.version}</version>
        </plugin>

        <!-- Maven exec plugin -->
        <plugin>
          <artifactId>exec-maven-plugin</artifactId>
          <groupId>org.codehaus.mojo</groupId>
          <version>${exec.plugin.version}</version>
        </plugin>

        <!-- Maven build helper plugin -->
        <plugin>
          <artifactId>build-helper-maven-plugin</artifactId>
          <groupId>org.codehaus.mojo</groupId>
          <version>${build-helper.plugin.version}</version>
        </plugin>

        <!-- Enable JUnit5 unit tests. -->
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <redirectTestOutputToFile>false</redirectTestOutputToFile>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${surefire.plugin.version}</version>
        </plugin>

        <!-- Enable javadoc artifacts. -->
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <destDir>docs/javadocs</destDir>
            <reportOutputDirectory>${project.basedir}/docs</reportOutputDirectory>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>jar</goal>
              </goals>
              <id>attach-javadocs</id>
            </execution>
          </executions>
          <version>${javadoc.plugin.version}</version>
        </plugin>

        <!-- Enable source artifacts. -->
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
              <id>attach-sources</id>
            </execution>
          </executions>
          <version>${source.plugin.version}</version>
        </plugin>

        <!-- Generate maven site. -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${site.plugin.version}</version>
        </plugin>

        <!-- Checkstyle plugin -->
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <configuration>
            <configLocation>codestyle/checkstyle.xml</configLocation>
            <consoleOutput>true</consoleOutput>
            <encoding>UTF-8</encoding>
            <excludes>**/module-info.java,**/target/**/*,**/protocols/**/*</excludes>
            <failOnViolation>true</failOnViolation>
            <failsOnError>true</failsOnError>
            <linkXRef>false</linkXRef>
            <violationSeverity>warning</violationSeverity>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
              <id>validate</id>
              <phase>validate</phase>
            </execution>
          </executions>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${checkstyle.plugin.version}</version>
        </plugin>

        <!-- SpotBugs Plugin -->
        <plugin>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <dependencies>
            <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
            <dependency>
              <artifactId>spotbugs</artifactId>
              <groupId>com.github.spotbugs</groupId>
              <version>${spotbug.plugin.version}</version>
            </dependency>
          </dependencies>
          <groupId>com.github.spotbugs</groupId>
          <version>${spotbug.plugin.version}</version>
        </plugin>

        <!-- Dependency plugin to manipulate artifacts -->
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${dependency.plugin.version}</version>
        </plugin>

        <!--Add git Properties to manifest-->
        <plugin>
          <artifactId>git-commit-id-plugin</artifactId>
          <groupId>pl.project13.maven</groupId>
          <version>${gitcommit.plugin.version}</version>
        </plugin>

        <!-- Create really executable jar from uber jar -->
        <plugin>
          <artifactId>really-executable-jar-maven-plugin</artifactId>
          <configuration>
            <flags>-Xmx1G -client -Djava.security.egd=file:/dev/./urandom</flags>
            <programFile>${executable.name}</programFile>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>really-executable-jar</goal>
              </goals>
              <phase>package</phase>
            </execution>
          </executions>
          <groupId>org.skife.maven</groupId>
          <version>${execjar.plugin.version}</version>
        </plugin>

        <!-- Automatically format all Java code using the Google Java Style:
            https://google.github.io/styleguide/javaguide.html -->
        <plugin>
          <artifactId>fmt-maven-plugin</artifactId>
          <dependencies>
            <dependency>
              <artifactId>google-java-format</artifactId>
              <groupId>com.google.googlejavaformat</groupId>
              <version>${google-java-format.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <goals>
                <goal>format</goal>
              </goals>
              <phase>process-sources</phase>
            </execution>
          </executions>
          <groupId>com.coveo</groupId>
          <version>${conveofmt.plugin.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${clean.plugin.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${deploy.plugin.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${install.plugin.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${jar.plugin.version}</version>
        </plugin>

        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${resources.plugin.version}</version>
        </plugin>

        <!-- Maven release plugin -->
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <configuration>
            <arguments>-Dmaven.test.skip=true</arguments>
            <localCheckout>true</localCheckout> <!-- must be true -->
            <tagNameFormat>v@{project.version}</tagNameFormat>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${release.plugin.version}</version>
        </plugin>

        <!-- Sonatype staging plugin-->
        <plugin>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <configuration>
            <autoReleaseAfterClose>true</autoReleaseAfterClose>
            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
            <serverId>ossrh</serverId>
          </configuration>
          <extensions>true</extensions>
          <groupId>org.sonatype.plugins</groupId>
          <version>${nexus-staging.plugin.version}</version>
        </plugin>

        <!-- GPG signing plugin -->
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>sign</goal>
              </goals>
              <id>sign-artifacts</id>
              <phase>verify</phase>
            </execution>
          </executions>
          <groupId>org.apache.maven.plugins</groupId>
          <version>${gpg.plugin.version}</version>
        </plugin>

        <!-- Sign Maven Plugin in without gpg-->
        <plugin>
          <artifactId>sign-maven-plugin</artifactId>
          <executions>
            <execution>
              <configuration>
                <keyFile><!-- private key file location --></keyFile>
                <keyId><!-- key id in hex --></keyId>
                <keyPass><!-- private key passphrase --></keyPass>
              </configuration>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
          <groupId>org.simplify4u.plugins</groupId>
          <version>0.3.0</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <!-- Configure Plugins -->
    <plugins>

      <!-- Kotlin-maven-plugin should be run before maven-compiler-plugin -->
      <plugin>
        <artifactId>kotlin-maven-plugin</artifactId>
        <configuration>
          <args>
            <!-- Enable strict mode for JSR-305 annotations -->
            <arg>-progressive</arg>
            <arg>-Xjsr305=strict</arg>
            <arg>-Xjvm-default=all</arg>
            <arg>-Xassertions=jvm</arg>
            <arg>-Xuse-experimental=kotlin.ExperimentalStdlibApi</arg>
            <arg>-Xopt-in=kotlinx.serialization.ImplicitReflectionSerializer</arg>
          </args>
        </configuration>
        <executions>

          <!-- Add kapt execution before compile -->
          <execution>
            <configuration>
              <annotationProcessorPaths/>
              <!-- Specify your annotation processors here. -->
              <sourceDirs>
                <sourceDir>src/main/kotlin</sourceDir>
                <sourceDir>src/main/java</sourceDir>
              </sourceDirs>
            </configuration>
            <goals>
              <goal>kapt</goal>
            </goals>
            <id>kapt</id>
          </execution>

          <execution>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/main/java</sourceDir>
              </sourceDirs>
            </configuration>
            <goals>
              <goal>compile</goal>
            </goals>
            <id>compile</id>
          </execution>

          <execution>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/test/java</sourceDir>
              </sourceDirs>
            </configuration>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <id>test-compile</id>
          </execution>
        </executions>

        <groupId>org.jetbrains.kotlin</groupId>
      </plugin>

      <!-- Compile the java code -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerVersion>${javac.target}</compilerVersion>
          <release>${javac.target}</release>
          <source>${javac.target}</source>
        </configuration>
        <executions>
          <!-- Replacing default-compile as it is treated specially by maven -->
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <!-- Replacing default-testCompile as it is treated specially by maven -->
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>

          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
            <id>java-compile</id>
            <phase>compile</phase>
          </execution>

          <execution>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <id>java-test-compile</id>
            <phase>test-compile</phase>
          </execution>
        </executions>

        <groupId>org.apache.maven.plugins</groupId>
      </plugin>

      <!-- Package all the dependencies into the JAR -->
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <filters>
                <filter>
                  <!--
                      Shading signed JARs will fail without this.
                      http://stackoverflow.com/questions/999489/invalid-signature-file-when-attempting-to-run-a-jar
                  -->
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <finalName>${uberjar.name}</finalName>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${app.main.class}</mainClass>
                </transformer>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
            </configuration>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>

      <!-- Enforces Maven version -->
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <dependencies>
          <dependency>
            <artifactId>extra-enforcer-rules</artifactId>
            <groupId>org.codehaus.mojo</groupId>
            <version>${extra-enforcer-rules.plugin.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <configuration>
              <rules>
                <dependencyConvergence/>
                <requireJavaVersion>
                  <version>${javac.target}</version>
                </requireJavaVersion>
                <requireMavenVersion>
                  <message>Maven ${maven.version}.0 or higher required.</message>
                  <version>[${maven.version},)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
            <id>enforce-maven</id>
          </execution>

          <!-- RCE CVE-2021-44228 ("Log4Shell")  -->
          <execution>
            <id>ban-bad-log4j-versions</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>org.apache.logging.log4j:log4j-core:(,2.15.0)</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>

        </executions>
        <groupId>org.apache.maven.plugins</groupId>
      </plugin>

    </plugins>
  </build>
  <dependencies>
    <dependency>
      <artifactId>kotlin-stdlib</artifactId>
      <groupId>org.jetbrains.kotlin</groupId>
    </dependency>
    <dependency>
      <artifactId>jmh-core</artifactId>
      <groupId>org.openjdk.jmh</groupId>
    </dependency>
    <dependency>
      <artifactId>jmh-generator-annprocess</artifactId>
      <groupId>org.openjdk.jmh</groupId>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <artifactId>kotlin-bom</artifactId>
        <groupId>org.jetbrains.kotlin</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <artifactId>jmh-core</artifactId>
        <groupId>org.openjdk.jmh</groupId>
        <version>${jmh.version}</version>
      </dependency>
      <dependency>
        <artifactId>jmh-generator-annprocess</artifactId>
        <groupId>org.openjdk.jmh</groupId>
        <scope>provided</scope>
        <version>${jmh.version}</version>
      </dependency>

      <!-- Logging -->
      <dependency>
        <artifactId>slf4j-api</artifactId>
        <groupId>org.slf4j</groupId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <artifactId>slf4j-simple</artifactId>
        <groupId>org.slf4j</groupId>
        <scope>runtime</scope>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- Nullability -->
      <dependency>
        <artifactId>jsr305</artifactId>
        <groupId>com.google.code.findbugs</groupId>
        <scope>provided</scope>
        <version>${jsr305.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>
  <description>A sample repo for maven project.</description>

  <developers>
    <developer>
      <name>Suresh</name>
      <organization>Github</organization>
      <organizationUrl>${github.url}</organizationUrl>
      <url>https://suresh.dev</url>
    </developer>
  </developers>
  <distributionManagement>
    <repository>
      <id>github</id>
      <name>sureshg</name>
      <uniqueVersion>true</uniqueVersion>
      <url>${github.pkg.url}</url>
    </repository>
    <site>
      <id>mvn-site</id>
      <url>dav:https://repo.com/content/sites/mvn-site/sample-app/</url>
    </site>
    <snapshotRepository>
      <id>github</id>
      <name>sureshg</name>
      <uniqueVersion>false</uniqueVersion>
      <url>${github.pkg.url}</url>
    </snapshotRepository>
  </distributionManagement>

  <!-- Default to Github pkg repo -->
  <profiles>
    <profile>
      <id>release</id>
    </profile>
  </profiles>
</project>
